spotlight {
  source {
    host: "0.0.0.0"
    port: 2004
    window-size: 2m
    buffer: 100000
  }

  publish.graphite = ${graphite} {
    host: localhost
    port: 20400
  }

  workflow {
    buffer: 1000
    detect {
      timeout: 10s
      max-in-flight-cpu-factor: 1
    }
  }

  plan-regex = "host\\..*\\.mean"

  detection-plans {
    skyline = ${spotlight.skyline-plan} {
      algorithms: [
        ewma,
        first-hour-average
        grubbs,
        histogram-bins,
        least-squares,
        mean-subtraction-cumulation,
        median-absolute-deviation,
        simple-moving-average
      ]
      regex: ${spotlight.plan-regex}
      algorithm-config {
        ewma.publish-threshold: yes
        first-hour-average.publish-threshold: yes
        grubbs.publish-threshold: yes
        histogram-bins.publish-threshold: yes
        least-squares.publish-threshold: yes
        mean-subtraction-cumulation.publish-threshold: yes
        median-absolute-deviation.publish-threshold: yes
        simple-moving-average.publish-threshold: yes
      }
    }

//    density = ${spotlight.density-plan} {
//      regex: ${spotlight.plan-regex}
//      algorithm-config.dbscanSeries.publish-threshold: yes
//    }

//    seasonal = {
//      regex: ${spotlight.plan-regex}
//      at-least: 2
//      algorithms: [ewma, seasonal-ewma]
//      algorithm-config {
//        ewma.publish-threshold: yes
//        seasonal-ewma {
//          wavelength: 1 day
//          bins: 24
//          publish-threshold: yes
//        }
//      }
//    }
  }

  metrics {
    publish-frequency: 10s
    csv.dir: ${LOG_HOME}/metrics
  }

  training {
    archival: off
//    whitelist: ["^prod\\.", "^spotlight\\.", "^peds\\.", "^streammonitor\\."]  #PROD
    home: ./log/training
    batch {
      max-points: 10000
      window: 2 minutes
    }
  }

  skyline-plan {
    majority: 50
    algorithms: [
      ewma,
      first-hour-average,
      grubbs,
      histogram-bins,
      least-squares,
      mean-subtraction-cumulation,
      median-absolute-deviation,
      simple-moving-average
    ]

//    algorithm-config: {
//      ks-test { reference-offset: 20 seconds }
//    }
  }

  density-plan {
    algorithm-config {
      dbscanSeries {
        tolerance: 3
        seedEps: 3
        minDensityConnectedPoints: 3
        publish-threshold: no
      }
    }
  }

  centroid-density-plan {
//    group {
//      limit: 10000
//      within: 2 minutes
//    }

    algorithm-config {
      dbscanSeriesCentroid {
        tolerance: 3
        seedEps: 3
        minDensityConnectedPoints: 3
      }
    }
  }
}


graphite {
  env-name: "dev"
  env-name: ${?ENVNAME} # optional override with environment variable if set
}
