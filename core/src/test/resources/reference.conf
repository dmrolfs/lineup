akka {
  # Options: ERROR, WARNING, INFO, DEBUG
  loglevel = DEBUG
  stdout-loglevel = DEBUG

  log-config-on-start = on
  loggers = ["akka.testkit.TestEventListener"]
  //  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.DefaultLoggingFilter"
  //  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = on
  log-dead-letters-during-shutdown = on

  actor.debug {
    receive = on
    autoreceive = on
    lifecycle = on
    unhandled = on
    event-stream = on
    fsm = on
  }
}


akka {
  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
}

akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    #    default-dispatcher {
    #      executor = "fork-join-executor"
    #      fork-join-executor {
    #        parallelism-min = 8
    #        parallelism-tolerance = 2.0
    #        parallelism-max = 8
    #      }
    #    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"
    ]

    auto-down-unreachable-after = 10s
  }
}
