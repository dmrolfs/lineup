spotlight {
  metrics {
    publish-frequency: 10s
    csv.dir: ${LOG_HOME}/metrics
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-config-on-start = on
  log-dead-letters-during-shutdown = off
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = INFO
  stdout-loglevel = INFO

  actor.debug {
    receive = on
    lifecycle = on
    autoreceive = on
    unhandled = on
    router-misconfiguration = on
  }
}

logger-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 16
  }
  //  executor = "fork-join-executor"
}

plan-router-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
//  throughput = 100
  fork-join-executor { }
}

outlier-detection-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
#  throughput = 100
  fork-join-executor { }
}

outlier-algorithm-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
#  throughput = 100
  fork-join-executor { }
}

publishing-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 8
  }
}

publisher-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    #    parallelism-min = 4
    #    parallelism-tolerance = 2.0
    #    parallelism-max = 16
  }
}