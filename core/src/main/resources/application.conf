spotlight {
  source {
    host: "0.0.0.0"
    port: 2004
    window-size: 2m
    buffer: 100000
  }

  publish.graphite = ${graphite} {
    host: localhost
    port: 20400
  }

  plan-regex = "host\\..*\\.mean"

  detection-plans {
    skyline = ${spotlight.skyline-plan} { regex: ${spotlight.plan-regex} }
    density = ${spotlight.density-plan} {
      regex: ${spotlight.plan-regex}
      algorithm-config.dbscanSeries.publish-controls: yes
    }
    centroid-density = ${spotlight.centroid-density-plan} {
      regex: ${spotlight.plan-regex}
      algorithm-config.dbscanSeriesCentroid.publish-controls: yes
    }
    seasonal = {
      regex: ${spotlight.plan-regex}
      algorithms: [ewma, seasonal-ewma]
      algorithm-config.seasonal-ewma {
        wavelength: 1 day
        bins: 24
      }
    }

    ewma = {
      regex: ${spotlight.plan-regex}
      algorithms: [ewma]
      algorithm-config.ewma.publish-controls: yes
    }

    seasonal-ewma = {
      regex: ${spotlight.plan-regex}
      algorithms: [seasonal-ewma]
      algorithm-config {
        seasonal-ewma {
          wavelength: 1 day
          bins: 24
          publish-controls: yes
        }
      }
    }

    first-hour-average = {
      regex: ${spotlight.plan-regex}
      algorithms: [first-hour-average]
      algorithm-config.first-hour-average.publish-controls: yes
    }
    grubbs = {
      regex: ${spotlight.plan-regex}
      algorithms: [grubbs]
      algorithm-config.grubbs {
        publish-controls: yes
        tolerance: 1
      }
    }
    histogram-bins = {
      regex: ${spotlight.plan-regex}
      algorithms: [histogram-bins]
      algorithm-config.histogram-bins.publish-controls: yes
    }
//    ks-test = {
//      regex: ${spotlight.plan-regex}
//      algorithm-config: {
//        ks-test {
//          reference-offset: 20 seconds
//          publish-controls: yes
//        }
//      }
//    }
    least-squares = {
      regex: ${spotlight.plan-regex}
      algorithms: [least-squares]
      algorithm-config.least-squares.publish-controls: yes
    }
    mean-subtraction-cumulation = {
      regex: ${spotlight.plan-regex}
      algorithms: [mean-subtraction-cumulation]
      algorithm-config.mean-subtraction-cumulation.publish-controls: yes
    }
    median-absolute-deviation = {
      regex: ${spotlight.plan-regex}
      algorithms: [median-absolute-deviation]
      algorithm-config.median-absolute-deviation.publish-controls: yes
    }
    simple-moving-average = {
      regex: ${spotlight.plan-regex}
      algorithms: [simple-moving-average]
      algorithm-config.simple-moving-average.publish-controls: yes
    }
  }

  metrics {
    publish-frequency: 10s
    csv.dir: ${LOG_HOME}/metrics
  }

  workflow {
    detect.timeout: 10s
    buffer: 100000
  }

  training {
    archival: off
//    whitelist: ["^prod\\.", "^spotlight\\.", "^peds\\.", "^streammonitor\\."]  #PROD
    home: ./log/training
    batch {
      max-points: 10000
      window: 2 minutes
    }
  }

  skyline-plan {
    majority: 50
    algorithms: [
      ewma, first-hour-average, grubbs, histogram-bins, least-squares, mean-subtraction-cumulation,
      median-absolute-deviation, simple-moving-average, seasonal-ewma
    ]
//    algorithm-config: {
//      ks-test { reference-offset: 20 seconds }
//    }
  }

  density-plan {
//    algorithms: [dbscanSeries]
    algorithm-config {
      dbscanSeries {
        tolerance: 3
        seedEps: 3
        minDensityConnectedPoints: 3
      }
    }
  }

  centroid-density-plan {
    algorithm-config {
      dbscanSeriesCentroid {
        tolerance: 3
        seedEps: 3
        minDensityConnectedPoints: 3
      }
    }
  }
}


graphite {
  env-name: "dev"
  env-name: ${?ENVNAME} # optional override with environment variable if set
}
