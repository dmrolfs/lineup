include "application"

# override default (DEV) settings
lineup {
  metrics {
    graphite = ${graphite}
    csv.dir: ""
  }

  publish.graphite = ${graphite}

  training {
    archival: off
    whitelist: ["^prod\\.", "^lineup\\.", "^peds\\.", "^streammonitor\\."]
    home: /var/log/training
  }

  detection-plans {
    default.is-default: off

    seriesDensity {
      regex: "prod\\..*"
      algorithms: [dbscanSeries]
      algorithm-config {
        dbscanSeries {
          eps: 3
          minDensityConnectedPoints: 3
        }
      }
    }

    centroidDensity {
      regex: "prod\\..*"
      algorithms: [dbscanSeriesCentroid]
      algorithm-config {
        dbscanSeriesCentroid {
          eps: 3
          minDensityConnectedPoints: 3
        }
      }
    }

    #    prod = ${lineup.density-plan} { regex: "prod\\..*" }
  }


  density-plan {
//    algorithms: [dbscanSeries]
    algorithm-config {
      dbscanSeries {
        eps: 3
        minDensityConnectedPoints: 3
      }
    }
  }
}


graphite {
  host: 172.31.19.99
  port: 2004

#  host: 139.126.184.125
#    host: 139.126.184.209
#    host: "52.88.220.252"
#    host: metrics.dmg.cdkglobal.com

  env-name: "prod"
  env-name: ${?ENVNAME} # optional override with environment variable if set
}


kamon {
  metric {
    tick-interval = 10 seconds

    filters {
      akka-actor {
        includes = [ "Lineup/user/workflow-supervisor/**" ]
        #    excludes = [ "my-app/system/**", "my-app/user/worker-helper" ]
      }

      akka-dispatcher {
        includes = [ "Lineup/akka.actor.default-dispatcher", "Lineup/*" ]
      }

      akka-router {
        includes = [ "Lineup/user/some-router" ]
      }
    }
  }

  statsd {
    # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
    # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
    hostname = ${graphite.host}
    port = ${graphite.port}

    # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
    # kamon.metrics.tick-interval setting.
    flush-interval = 60 seconds

    # Max packet size for UDP metrics data sent to StatsD.
    max-packet-size = 1024 bytes

    report-system-metrics = true

    # Subscription patterns used to select which metrics will be pushed to StatsD. Note that first, metrics
    # collection for your desired entities must be activated under the kamon.metrics.filters settings.
    includes {
      actor       = [ "*" ]
      trace       = [ "*" ]
      dispatcher  = [ "*" ]
    }

    simple-metric-key-generator {
      # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
      # this pattern:
      #    application.host.entity.entity-name.metric-name
      application = "Lineup"
    }
  }
}
