include "kryo.conf"

akka {
#  loggers = ["akka.event.slf4j.Slf4jLogger"]
#  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-config-on-start = off
  log-dead-letters-during-shutdown = off
  # Options: off, error, warning, info, debug
  loglevel = warning
  stdout-loglevel = warning

  actor.debug {
    receive = off
    lifecycle = off
    autoreceive = off
    unhandled = on
    router-misconfiguration = on
  }
}

akka.remote {
  log-remote-lifecycle-events = off
  netty.tcp {
    hostname = 127.0.0.1
    port = 2552
  }
}

akka.actor.provider = akka.cluster.ClusterActorRefProvider
#akka.cluster {
#  auto-down-unreachable-after = 60s
#
#  seed-nodes = [
#    "akka.tcp://Spotlight@127.0.0.1:2552"
#  ]
#}

omnibus.persistence.journal.memory {
  # Class name of the plugin.
  class = omnibus.akka.persistence.MemoryJournal
  # Dispatcher for the plugin actor.
#  plugin-dispatcher = "akka.actor.default-dispatcher"
  plugin-dispatcher = spotlight.dispatchers.memory-journal-dispatcher
  expected-persistence-ids = 10000
}

akka.persistence {
  # On a single node, algorithm journalling inmemory and cassandra snapshot works well even at massive scale
  algorithm.journal.plugin = ${omnibus.persistence.journal.memory}
#  algorithm.journal.plugin = ${cassandra-journal}

  //  algorithm.snapshot.plugin = ${akka.persistence.snapshot-store.local}

#  journal.plugin = "akka.persistence.journal.leveldb"
#  journal.leveldb.dir = "./graphite/target/data/leveldb/journal"
#  snapshot-store.plugin = "akka.persistence.snapshot-store.local"
#  snapshot-store.local.dir = "./graphite/target/data/leveldb/snapshots"

  # In production all-cassandra is preferred
#  algorithm.journal.plugin = ${cassandra-journal}
  algorithm.snapshot.plugin = ${cassandra-snapshot-store}
  journal.plugin = cassandra-journal
  snapshot-store.plugin = cassandra-snapshot-store
}

spotlight.dispatchers {
  outlier-detection-dispatcher {
    type = Dispatcher
    executor = fork-join-executor
    #  throughput = 100
    fork-join-executor { }
  }

  publishing-dispatcher {
    type = Dispatcher
    executor = thread-pool-executor
    thread-pool-executor {
      fixed-pool-size = 8
    }
  }

  memory-journal-dispatcher {
    type = Dispatcher
    executor = fork-join-executor
    #  throughput = 100
    fork-join-executor { }
  }
  //  publisher-dispatcher {
//    type = Dispatcher
//    executor = "fork-join-executor"
//    fork-join-executor {
//      #    parallelism-min = 4
//      #    parallelism-tolerance = 2.0
//      #    parallelism-max = 16
//    }
//  }
}

//plan-router-dispatcher {
//  type = Dispatcher
//  executor = "fork-join-executor"
//  //  throughput = 100
//  fork-join-executor { }
//}
